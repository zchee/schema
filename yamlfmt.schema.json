{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "yamlfmt config file",
  "description": "The yamlfmt config file. For details, see https://github.com/google/yamlfmt/blob/main/docs/config-file.md.",
  "type": "object",
  "properties": {
    "line_ending": {
      "type": "string",
      "enum": ["lf", "crlf"],
      "default": "lf",
      "description": "Parse and write the file with 'lf' or 'crlf' line endings. This global setting will override any formatter line_ending options."
    },
    "doublestar": {
      "type": "boolean",
      "default": false,
      "description": "Use doublestar for include and exclude paths. (This was the default before 0.7.0)"
    },
    "continue_on_error": {
      "type": "boolean",
      "default": false,
      "description": "Continue formatting and don't exit with code 1 when there is an invalid yaml file found."
    },
    "include": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "The paths for the command to include for formatting. See Specifying Paths for more details."
    },
    "exclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "The paths for the command to exclude from formatting. See Specifying Paths for more details."
    },
    "gitignore_excludes": {
      "type": "boolean",
      "default": false,
      "description": "Use gitignore files for exclude paths. This is in addition to the patterns from the exclude option."
    },
    "gitignore_path": {
      "type": "string",
      "default": ".gitignore",
      "description": "The path to the gitignore file to use."
    },
    "regex_exclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Regex patterns to match file contents for, if the file content matches the regex the file will be excluded. Use Golang regexes."
    },
    "extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "The extensions to use for standard mode path collection. See Specifying Paths for more details."
    },
    "formatter": {
      "description": "Formatter settings. See Formatter for more details.",
      "type": "object",
      "default": {
        "type": "basic"
      },
      "properties": {
        "type": {
          "type": "string",
          "default": "basic"
        },
        "indent": {
          "type": "integer",
          "default": 2,
          "description": "The indentation level in spaces to use for the formatted yaml."
        },
        "include_document_start": {
          "type": "boolean",
          "default": false,
          "description": "Include '---' at document start."
        },
        "line_ending": {
          "type": "string",
          "enum": ["lf", "crlf"],
          "default": "lf",
          "description": "Parse and write the file with 'lf' or 'crlf' line endings. This global setting will override any formatter line_ending options."
        },
        "retain_line_breaks": {
          "type": "boolean",
          "default": false,
          "description": "Retain line breaks in formatted yaml."
        },
        "retain_line_breaks_single": {
          "type": "boolean",
          "default": false,
          "description": "Retain line breaks in formatted yaml, but only keep a single line in groups of many blank lines."
        },
        "disallow_anchors": {
          "type": "boolean",
          "default": false,
          "description": "If true, reject any YAML anchors or aliases found in the document."
        },
        "max_line_length": {
          "type": "number",
          "default": 0,
          "description": "Set the maximum line length (see notes below). if not set, defaults to 0 which means no limit."
        },
        "scan_folded_as_literal": {
          "type": "boolean",
          "default": false,
          "description": "Option that will preserve newlines in folded block scalars (blocks that start with >)."
        },
        "indentless_arrays": {
          "type": "boolean",
          "default": false,
          "description": "Render '-' array items (block sequence items) without an increased indent."
        },
        "drop_merge_tag": {
          "type": "boolean",
          "default": false,
          "description": "Assume that any well formed merge using just a << token will be a merge, and drop the !!merge tag from the formatted result."
        },
        "pad_line_comments": {
          "type": "number",
          "default": false,
          "description": "The number of padding spaces to insert before line comments."
        },
        "trim_trailing_whitespace": {
          "type": "boolean",
          "default": false,
          "description": "Trim trailing whitespace from lines."
        },
        "eof_newline": {
          "type": "boolean",
          "default": false,
          "description": "Always add a newline at end of file. Useful in the scenario where retain_line_breaks is disabled but the trailing newline is still needed."
        }
      }
    },
    "output_format": {
      "type": "string",
      "enum": ["default", "line"],
      "default": "default",
      "description": "The output format to use. See Output docs for more details."
    }
  },
  "additionalProperties": false
}
